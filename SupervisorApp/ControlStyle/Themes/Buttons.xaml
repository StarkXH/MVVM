<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:common="clr-namespace:ControlStyle"
                    >
    <SolidColorBrush x:Key="Silergy_Blue">#005CB9</SolidColorBrush>
    <!--Button-->
    <Style x:Key="ButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="UseLayoutRounding" Value="True" />
        <Setter Property="Background" Value="#434343"/>
        <Setter Property="BorderBrush" Value="#242424"/>
        <Setter Property="Foreground" Value="White" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Padding" Value="5" />
        <Setter Property="Margin" Value="5" />
        <Setter Property="Opacity" Value=".9" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal">
                                    <Storyboard>
                                        <PointAnimation Storyboard.TargetName="Brush"
                                                      Storyboard.TargetProperty="Center"
                                                      To=".3,.0"
                                                      Duration="0:0:0.3">
                                            <PointAnimation.EasingFunction>
                                                <CubicEase EasingMode="EaseInOut" />
                                            </PointAnimation.EasingFunction>
                                        </PointAnimation>
                                        <PointAnimation Storyboard.TargetName="Brush"
                                                      Storyboard.TargetProperty="GradientOrigin"
                                                      To=".3,.0"
                                                      Duration="0:0:0.3">
                                            <PointAnimation.EasingFunction>
                                                <CubicEase EasingMode="EaseInOut" />
                                            </PointAnimation.EasingFunction>
                                        </PointAnimation>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <PointAnimation Storyboard.TargetName="Brush"
                                                      Storyboard.TargetProperty="Center"
                                                      To=".7,.0"
                                                      Duration="0:0:0.3">
                                            <PointAnimation.EasingFunction>
                                                <CubicEase EasingMode="EaseInOut" />
                                            </PointAnimation.EasingFunction>
                                        </PointAnimation>
                                        <PointAnimation Storyboard.TargetName="Brush"
                                                      Storyboard.TargetProperty="GradientOrigin"
                                                      To=".7,.0"
                                                      Duration="0:0:0.3">
                                            <PointAnimation.EasingFunction>
                                                <CubicEase EasingMode="EaseInOut" />
                                            </PointAnimation.EasingFunction>
                                        </PointAnimation>
                                        <DoubleAnimation Storyboard.TargetName="OuterShadow"
                                                       Storyboard.TargetProperty="ShadowDepth"
                                                       To="2"
                                                       Duration="0:0:0.1" />
                                        <DoubleAnimation Storyboard.TargetName="OuterShadow"
                                                       Storyboard.TargetProperty="BlurRadius"
                                                       To="5"
                                                       Duration="0:0:0.1" />
                                        <DoubleAnimation Storyboard.TargetName="OuterShadow"
                                                       Storyboard.TargetProperty="Opacity"
                                                       To=".5"
                                                       Duration="0:0:0.1" />
                                        <ColorAnimation Storyboard.TargetName="OuterShadow"
                                                      Storyboard.TargetProperty="Color"
                                                      To="#000"
                                                      Duration="0:0:0.1" />
                                        <DoubleAnimation Storyboard.TargetName="InnerShadow"
                                                       Storyboard.TargetProperty="Opacity"
                                                       To=".0"
                                                       Duration="0:0:0.1" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <PointAnimation Storyboard.TargetName="Brush"
                                                      Storyboard.TargetProperty="Center"
                                                      To=".7,.0"
                                                      Duration="0:0:0.3">
                                            <PointAnimation.EasingFunction>
                                                <CubicEase EasingMode="EaseInOut" />
                                            </PointAnimation.EasingFunction>
                                        </PointAnimation>
                                        <PointAnimation Storyboard.TargetName="Brush"
                                                      Storyboard.TargetProperty="GradientOrigin"
                                                      To=".7,.0"
                                                      Duration="0:0:0.3">
                                            <PointAnimation.EasingFunction>
                                                <CubicEase EasingMode="EaseInOut" />
                                            </PointAnimation.EasingFunction>
                                        </PointAnimation>
                                        <DoubleAnimation Storyboard.TargetName="HighlightBorder"
                                                       Storyboard.TargetProperty="Opacity"
                                                       To="0"
                                                       Duration="0:0:0.3" />

                                        <DoubleAnimation Storyboard.TargetName="HighlightMask"
                                                       Storyboard.TargetProperty="Opacity"
                                                       To="0.2"
                                                       Duration="0:0:0.1" />
                                        <DoubleAnimation Storyboard.TargetName="OuterShadow"
                                                       Storyboard.TargetProperty="ShadowDepth"
                                                       To="1"
                                                       Duration="0:0:0.1" />
                                        <DoubleAnimation Storyboard.TargetName="OuterShadow"
                                                       Storyboard.TargetProperty="BlurRadius"
                                                       To="0"
                                                       Duration="0:0:0.1" />
                                        <DoubleAnimation Storyboard.TargetName="OuterShadow"
                                                       Storyboard.TargetProperty="Opacity"
                                                       To=".25"
                                                       Duration="0:0:0.1" />
                                        <ColorAnimation Storyboard.TargetName="OuterShadow"
                                                      Storyboard.TargetProperty="Color"
                                                      To="#FFAAAAAA"
                                                      Duration="0:0:0.1" />

                                        <DoubleAnimation Storyboard.TargetName="InnerShadow"
                                                       Storyboard.TargetProperty="Opacity"
                                                       To=".8"
                                                       Duration="0:0:0.1" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border Background="{TemplateBinding Background}"
                              BorderBrush="{TemplateBinding BorderBrush}"
                              BorderThickness="{TemplateBinding BorderThickness}"
                              CornerRadius="4"
                              SnapsToDevicePixels="true">
                            <Border.Effect>
                                <DropShadowEffect x:Name="OuterShadow"
                                                BlurRadius="0"
                                                Direction="270"
                                                Opacity=".25"
                                                ShadowDepth="1"
                                                Color="#FFF" />
                            </Border.Effect>
                        </Border>
                        <Border x:Name="border"
                              Background="{TemplateBinding Background}"
                              BorderBrush="{TemplateBinding BorderBrush}"
                              BorderThickness="{TemplateBinding BorderThickness}"
                              CornerRadius="4"
                              SnapsToDevicePixels="true">

                            <Grid>

                                <Rectangle x:Name="HighlightMask"
                                         RadiusX="4"
                                         RadiusY="4">
                                    <Rectangle.Fill>
                                        <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                                            <GradientStop x:Name="Stop1" Offset=".5" Color="#0000" />
                                            <GradientStop x:Name="Stop2" Offset=".5" Color="#2000" />
                                        </LinearGradientBrush>
                                    </Rectangle.Fill>
                                </Rectangle>
                                <ContentPresenter x:Name="contentPresenter"
                                                Margin="{TemplateBinding Padding}"
                                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                Focusable="False"
                                                RecognizesAccessKey="True"
                                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                                    <ContentPresenter.Effect>
                                        <DropShadowEffect BlurRadius="2"
                                                        Direction="270"
                                                        ShadowDepth="1"
                                                        Color="#D000" />
                                    </ContentPresenter.Effect>
                                </ContentPresenter>

                                <Border x:Name="HighlightBorder"
                                      BorderBrush="White"
                                      BorderThickness="0,1,0,0"
                                      CornerRadius="4">
                                    <Border.OpacityMask>
                                        <RadialGradientBrush x:Name="Brush" Center=".3,.0" GradientOrigin=".3,.0"
                                                           RadiusX=".2" RadiusY=".2">
                                            <GradientStop Color="#F000" />
                                            <GradientStop Offset=".7" Color="#8000" />
                                            <GradientStop Offset="1" Color="#5000" />
                                        </RadialGradientBrush>
                                    </Border.OpacityMask>
                                </Border>
                            </Grid>
                        </Border>

                        <Grid x:Name="InnerShadow" Opacity="0">
                            <Border Margin="-5"
                                  BorderBrush="Black"
                                  BorderThickness="5">
                                <Border.Effect>
                                    <DropShadowEffect BlurRadius="7" ShadowDepth="0" />
                                </Border.Effect>
                            </Border>
                            <Grid.OpacityMask>
                                <VisualBrush Stretch="None" Visual="{Binding ElementName=border}" />
                            </Grid.OpacityMask>
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsDefaulted" Value="true">
                            <Setter TargetName="border" Property="BorderBrush"
                                  Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                        </Trigger>

                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="border" Property="Background" Value="#494949"/>
                        </Trigger>

                        <Trigger Property="IsEnabled" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{DynamicResource Silergy_Blue}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--BreathingButton-->
    <Style x:Key="BreathingButtonStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource ButtonStyle}">
        <Setter Property="Effect">
            <Setter.Value>
                <DropShadowEffect x:Name="OG" BlurRadius="20" Color="Tomato" Direction="0" Opacity="1.0" RenderingBias="Performance" ShadowDepth="0">
                    <Storyboard.TargetProperty>
                        BlurRadius
                    </Storyboard.TargetProperty>
                </DropShadowEffect>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="True">
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetProperty="(FrameworkElement.Effect).(DropShadowEffect.BlurRadius)" BeginTime="00:00:00" From="0" To="10" Duration="00:00:01" AutoReverse="True" RepeatBehavior="Forever"/>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--SearchButton-->
    <Style x:Key="SearchButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="IsHitTestVisible" Value="True"/>
        <Setter Property="Width" Value="35"/>
        <Setter Property="Height" Value="35"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>

        <!-- 内边距 -->
        <Setter Property="Padding" Value="1"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <!--外层容器 作用：作为按钮的根容器，负责背景和边框渲染-->
                    <Border x:Name="border" Background="{TemplateBinding Background}"
                       BorderThickness="{TemplateBinding BorderThickness}" 
                       BorderBrush="{TemplateBinding BorderBrush}" SnapsToDevicePixels="true">

                        <!--内层容器与图标 内层 Border 设置 Padding="9"，为图标提供内边距-->
                        <!--Viewbox：自动缩放图标内容，保持比例适应容器
               Path：通过 IconData 绑定矢量路径数据（如 SVG 路径字符串）
               Fill：绑定 Foreground 属性，控制图标颜色
               Stretch="Uniform"：等比例拉伸图标填满空间-->
                        <Border Padding="5">
                            <Viewbox>
                                <Path Data="M955.069071 864.311021 740.015134 649.258107c-3.752464-3.751441-8.841366-5.860475-14.149255-5.860475-5.306866 0-10.395768 2.108011-14.149255 5.860475l-16.692171 16.692171-38.34226-38.34226c53.03796-59.810201 85.298711-138.442072 85.298711-224.478588 0-186.774871-151.952784-338.727655-338.727655-338.727655S64.527642 216.35456 64.527642 403.12943c0 186.775894 151.952784 338.728678 338.727655 338.728678 86.36909 0 165.276231-32.510438 225.170343-85.913718l38.303374 38.303374-17.34504 17.34504c-7.812943 7.813966-7.812943 20.48352 0 28.297486l215.051891 215.052914c3.753487 3.751441 8.841366 5.860475 14.149255 5.860475 5.306866 0 10.395768-2.108011 14.149255-5.860475l62.334697-62.334697C962.883037 884.794541 962.883037 872.124987 955.069071 864.311021zM104.546078 403.12943c0-164.709319 133.9999-298.709219 298.709219-298.709219s298.709219 133.9999 298.709219 298.709219S567.964616 701.839673 403.255297 701.839673 104.546078 567.838749 104.546078 403.12943zM878.585119 912.496463 691.829691 725.741036l34.036187-34.036187 186.755428 186.755428L878.585119 912.496463z"  
                                 x:Name="path" Fill="{TemplateBinding Foreground}"
                                 Stretch="Uniform">
                                </Path>
                            </Viewbox>
                        </Border>
                    </Border>
                    <ControlTemplate.Triggers>

                        <!--默认高亮状态-->
                        <Trigger Property="IsDefaulted" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                        </Trigger>

                        <!--鼠标悬停状态-->
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" TargetName="border" Value="#FFC3C3C3"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="#FF6C6C6C"/>
                            <Setter Property="Foreground"  Value="#FFFFFFFF"/>
                        </Trigger>

                        <!--按下状态-->
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" TargetName="border" Value="#FF6C6C6C"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="#FF6C6C6C"/>
                        </Trigger>

                        <!--禁用状态-->
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" TargetName="border" Value="#FFF4F4F4"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="#FFADB2B5"/>
                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--ClearButton-->
    <Style x:Key="ClearButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="IsHitTestVisible" Value="True"/>
        <Setter Property="Width" Value="35"/>
        <Setter Property="Height" Value="35"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>

        <!-- 内边距 -->
        <Setter Property="Padding" Value="1"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <!--外层容器 作用：作为按钮的根容器，负责背景和边框渲染-->
                    <Border x:Name="border" Background="{TemplateBinding Background}"
                    BorderThickness="{TemplateBinding BorderThickness}" 
                    BorderBrush="{TemplateBinding BorderBrush}" SnapsToDevicePixels="true">

                        <!--内层容器与图标 内层 Border 设置 Padding="9"，为图标提供内边距-->
                        <!--Viewbox：自动缩放图标内容，保持比例适应容器
            Path：通过 IconData 绑定矢量路径数据（如 SVG 路径字符串）
            Fill：绑定 Foreground 属性，控制图标颜色
            Stretch="Uniform"：等比例拉伸图标填满空间-->
                        <Border Padding="5">
                            <Viewbox>
                                <Path Data="M921.6 512 880.64 512 972.8 972.8C972.8 1001.088 949.888 1024 921.6 1024L102.4 1024C74.112 1024 51.2 1001.088 51.2 972.8L143.36 512 102.4 512C74.112 512 51.2 489.088 51.2 460.8L51.2 409.6C51.2 381.312 74.112 358.4 102.4 358.4L409.6 358.4 409.6 102.4C409.6 45.8496 455.4496 0 512 0 568.5504 0 614.4 45.8496 614.4 102.4L614.4 358.4 921.6 358.4C949.888 358.4 972.8 381.312 972.8 409.6L972.8 460.8C972.8 489.088 949.888 512 921.6 512ZM102.4 972.8 257.6384 972.8C254.1056 967.5008 252.4416 960.9472 253.6192 954.1888L284.7488 726.5024C287.2064 712.6016 300.4672 703.2832 314.3936 705.7408 328.32 708.1984 337.6128 721.4848 335.1808 735.4112L304.0512 963.072C303.4112 966.6816 302.0032 969.9328 300.1088 972.8L921.6 972.8 819.2 512 204.8 512 102.4 972.8ZM563.2 102.4C563.2 74.112 540.288 51.2 512 51.2 483.712 51.2 460.8 74.112 460.8 102.4L460.8 358.4 563.2 358.4 563.2 102.4ZM921.6 409.6 102.4 409.6 102.4 460.8 921.6 460.8 921.6 409.6Z"  
                              x:Name="path" Fill="{TemplateBinding Foreground}"
                              Stretch="Uniform">
                                </Path>
                            </Viewbox>
                        </Border>
                    </Border>
                    <ControlTemplate.Triggers>

                        <!--默认高亮状态-->
                        <Trigger Property="IsDefaulted" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                        </Trigger>

                        <!--鼠标悬停状态-->
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" TargetName="border" Value="#FFC3C3C3"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="#FF6C6C6C"/>
                            <Setter Property="Foreground"  Value="#FFFFFFFF"/>
                        </Trigger>

                        <!--按下状态-->
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" TargetName="border" Value="#FF6C6C6C"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="#FF6C6C6C"/>
                        </Trigger>

                        <!--禁用状态-->
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" TargetName="border" Value="#FFF4F4F4"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="#FFADB2B5"/>
                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--Filter Button-->
    <Style x:Key="CircleButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="#dedede"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="IsHitTestVisible" Value="True"/>
        <Setter Property="Width" Value="35"/>
        <Setter Property="Height" Value="35"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ButtonBase}">
                    <Grid SnapsToDevicePixels="True">
                        <Ellipse Width="{TemplateBinding Width}" Height="{TemplateBinding Height}"
                       Fill="{TemplateBinding Background}" Stroke="{TemplateBinding BorderBrush}"
                       Effect="{StaticResource UnhoverEffect}"/>
                        <ContentControl Content="{TemplateBinding Content}" Focusable="False"
                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Effect" Value="{StaticResource HoverEffect}"/>
                            <Setter Property="Cursor" Value="Hand"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--RadioButton-->
    <Style x:Key="RadioThemeColor" TargetType="RadioButton">
        <Setter Property="Margin" Value="2"/>
        <Setter Property="Background" Value="WhiteSmoke"/>
        <Setter Property="Foreground" Value="LightGray"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="VerticalAlignment" Value="Top"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RadioButton">
                    <Border CornerRadius="10" BorderThickness="1">
                        <Grid Background="{TemplateBinding Background}" Width="100" Height="30" Margin="{TemplateBinding Margin}">
                            <Border x:Name="_borderOver" Background="Transparent" BorderBrush="Transparent" BorderThickness="1" Margin="1" CornerRadius="10">
                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            </Border>
                        </Grid>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderBrush" TargetName="_borderOver" Value="LightGray"/>
                            <Setter Property="Foreground" Value="{DynamicResource Silergy_Blue}"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Foreground" Value="{DynamicResource Silergy_Blue}"/>
                            <Setter Property="BorderBrush" TargetName="_borderOver" Value="{DynamicResource Silergy_Blue}"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="False">
                            <Setter Property="Foreground" Value="LightGray"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="RadioButtonStyle" TargetType="RadioButton">
        <Setter Property="Margin" Value="2"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="VerticalAlignment" Value="Top"/>
        <Setter Property="FontSize" Value="10"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RadioButton">
                    <Border CornerRadius="30" BorderThickness="1">
                        <Grid Background="{TemplateBinding Background}" Width="30" Height="30" Margin="{TemplateBinding Margin}">
                            
                            <Border x:Name="_borderOver" Background="Transparent" BorderBrush="Transparent" BorderThickness="1" Margin="1" CornerRadius="13" Width="26" Height="26">
                                
                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            </Border>
                            <Ellipse x:Name="ellipse"
                                     Width="14"
                                     Height="14"
                                     HorizontalAlignment="Center"
                                     VerticalAlignment="Center"
                                     Fill="Transparent">
                            </Ellipse>
                        </Grid>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Cursor" Value="Hand"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Foreground" Value="White"/>
                            <Setter Property="BorderBrush" TargetName="_borderOver" Value="Blue"/>
                            <Setter Property="Background" TargetName="_borderOver" Value="{DynamicResource Silergy_Blue}"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="False">
                            <Setter Property="Foreground" Value="Black"/>
                            <Setter Property="BorderBrush" TargetName="_borderOver" Value="{DynamicResource Silergy_Blue}"/>
                            <Setter Property="Background" TargetName="_borderOver" Value="LightSkyBlue"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" TargetName="_borderOver" Value="WhiteSmoke"/>
                            <Setter Property="BorderBrush" TargetName="_borderOver" Value="LightGray"/>
                            <Setter Property="Foreground" Value="Black"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>