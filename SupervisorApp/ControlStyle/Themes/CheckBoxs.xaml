<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:common="clr-namespace:ControlStyle"
                    xmlns:sys="clr-namespace:System;assembly=mscorlib"
                    xmlns:theme="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero">
    
    <Style x:Key="FocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Margin="2" StrokeDashArray="1 2" SnapsToDevicePixels="true" StrokeThickness="1" Stroke="{StaticResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- 内容样式 -->
    <Style x:Key="OptionMarkFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Margin="14,0,0,0" StrokeDashArray="1 2" SnapsToDevicePixels="true" StrokeThickness="1" Stroke="{StaticResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <sys:Double x:Key="DefalutFontSize">12</sys:Double>
    <sys:Double x:Key="DefalutIconSize">14</sys:Double>

    <SolidColorBrush x:Key="CheckBoxs.Static.Background" Color="#FFFFFFFF"/>
    <SolidColorBrush x:Key="CheckBoxs.Static.Border" Color="#FF000000"/>
    <SolidColorBrush x:Key="CheckBoxs.Static.Glyph" Color="#FF000000"/>
    <SolidColorBrush x:Key="CheckBoxs.Static.Foreground" Color="#FF000000"/>
    <SolidColorBrush x:Key="CheckBoxs.MouseOver.Border" Color="#FFef8736"/>
    <SolidColorBrush x:Key="CheckBoxs.Pressed.Background" Color="#FF2C6976"/>
    <SolidColorBrush x:Key="CheckBoxs.Pressed.Border" Color="#FF2C6976"/>
    <SolidColorBrush x:Key="CheckBoxs.Disabled.Background" Color="#FFE6E6E6"/>
    <SolidColorBrush x:Key="CheckBoxs.Disabled.Border" Color="#FFBCBCBC"/>
    <SolidColorBrush x:Key="CheckBoxs.Disabled.Glyph" Color="#FF707070"/>
    <SolidColorBrush x:Key="CheckBoxs.Disabled.Foreground" Color="#FF707070"/>


    <Style x:Key="CheckBoxs" TargetType="{x:Type CheckBox}">

        <!-- 获取焦点 -->
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>

        <!-- 背景颜色 -->
        <Setter Property="Background" Value="{StaticResource CheckBoxs.Static.Background}"/>

        <!-- 边框颜色 -->
        <Setter Property="BorderBrush" Value="{StaticResource CheckBoxs.Static.Border}"/>

        <!-- 字体颜色 -->
        <Setter Property="Foreground" Value="{StaticResource CheckBoxs.Static.Foreground}"/>

        <!-- 边框粗细 -->
        <Setter Property="BorderThickness" Value="1"/>

        <!-- 字体大小 -->
        <Setter Property="FontSize" Value="{StaticResource DefalutFontSize}"/>

        <!-- 内容垂直居中 -->
        <Setter Property="VerticalContentAlignment" Value="Center"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="CheckBox">
                    <Grid x:Name="templateRoot" Background="Transparent" SnapsToDevicePixels="True">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>

                        <Border Width="{StaticResource DefalutIconSize}" Height="{StaticResource DefalutIconSize}" x:Name="border"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            Margin="1"
                            >
                            <Grid>
                                <!--勾-->
                                <Path x:Name="optionMark"
                                  Data="F1 M 9.97498,1.22334L 4.6983,9.09834L 4.52164,9.09834L 0,5.19331L 1.27664,3.52165L 4.255,6.08833L 8.33331,1.52588e-005L 9.97498,1.22334 Z " 
                                  Fill="{StaticResource CheckBoxs.Static.Background}"
                                  Margin="1" Opacity="0"
                                  Stretch="Uniform"
                                  >
                                </Path>
                                <Rectangle x:Name="indeterminateMark" Fill="{StaticResource CheckBoxs.Static.Glyph}" Margin="2" Opacity="0"/>
                            </Grid>
                        </Border>

                        <ContentPresenter x:Name="contentPresenter" Grid.Column="1" 
                                    Focusable="False"
                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                    Margin="{TemplateBinding Padding}"
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                    RecognizesAccessKey="True" 
                                    >
                        </ContentPresenter>

                    </Grid>

                    <ControlTemplate.Triggers>

                        <!-- 存在内容 -->
                        <Trigger Property="HasContent" Value="True">
                            <Setter Property="FocusVisualStyle" Value="{StaticResource OptionMarkFocusVisual}"/>
                            <Setter Property="Padding" Value="4,-1,0,0"/>
                        </Trigger>

                        <!-- 鼠标悬停 -->
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource CheckBoxs.MouseOver.Border}"/>
                        </Trigger>

                        <!-- 鼠标按下 -->
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource CheckBoxs.Pressed.Background}"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource CheckBoxs.Pressed.Border}"/>
                        </Trigger>

                        <!-- 选中 -->
                        <Trigger Property="IsChecked" Value="true">
                            <Setter Property="Background" TargetName="border" Value="#005CB9"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="#005CB9"/>
                            <Setter Property="Opacity" TargetName="optionMark" Value="1"/>
                            <Setter Property="Opacity" TargetName="indeterminateMark" Value="0"/>
                        </Trigger>

                        <!-- 未选中 -->
                        <Trigger Property="IsChecked" Value="{x:Null}">
                            <Setter Property="Opacity" TargetName="optionMark" Value="0"/>
                            <Setter Property="Opacity" TargetName="indeterminateMark" Value="1"/>
                        </Trigger>

                        <!-- 失能 -->
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource CheckBoxs.Disabled.Background}"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource CheckBoxs.Disabled.Border}"/>
                            <Setter Property="Fill" TargetName="optionMark" Value="{StaticResource CheckBoxs.Disabled.Glyph}"/>
                            <Setter Property="Fill" TargetName="indeterminateMark" Value="{StaticResource CheckBoxs.Disabled.Glyph}"/>
                            <Setter Property="TextBlock.Foreground" TargetName="contentPresenter" Value="{StaticResource CheckBoxs.Disabled.Foreground}"/>
                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--CheckBox-->
    <Style x:Key="chkBullet" TargetType="CheckBox">
        <Setter Property="IsChecked" Value="False"/>
        <Setter Property="Background" Value="LightGray"/>
        <Setter Property="Foreground" Value="WhiteSmoke"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="CheckBox">
                    <Border Width="75" Height="20" CornerRadius="10" Background="{TemplateBinding Background}">
                        <Grid>
                            <Border x:Name="border" Width="18" Height="18" CornerRadius="9" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="1 0" Background="White">
                                <Border.RenderTransform>
                                    <TranslateTransform X="0"/>
                                </Border.RenderTransform>
                            </Border>
                            <TextBlock x:Name="txt" Text="{TemplateBinding Content}" Margin="9 0" VerticalAlignment="Center" Foreground="White">
                                <TextBlock.RenderTransform>
                                    <TranslateTransform X="18"></TranslateTransform>
                                </TextBlock.RenderTransform>
                            </TextBlock>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter Property="Background" Value="{DynamicResource Silergy_Green}"/>
                            <Setter Property="Text" TargetName="txt" Value="{Binding Tag,RelativeSource={RelativeSource TemplatedParent}}"/>
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="border" Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)" To="55" Duration="00:00:0.2"/>
                                        <DoubleAnimation Storyboard.TargetName="txt" Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)" To="0" Duration="00:00:0.2"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="border" Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)" To="0" Duration="00:00:0.2"/>
                                        <DoubleAnimation Storyboard.TargetName="txt" Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)" To="18" Duration="00:00:0.2"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="False">
                            <Setter Property="Background" Value="Gray"/>
                            <Setter Property="Text" TargetName="txt" Value="{Binding Content,RelativeSource={RelativeSource TemplatedParent}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>